if not config:
    configfile: "config/config.yaml"


def _get_all_targets(wildcards):
    # Default targets are the metadata TSV and sequences FASTA files
    all_targets = [
        "data/a/sequences.fasta",
        "data/a/metadata.tsv",
        "data/b/sequences.fasta",
        "data/b/metadata.tsv",
        "data/a/sequences_open.fasta",
        "data/a/metadata_open.tsv",
        "data/b/sequences_open.fasta",
        "data/b/metadata_open.tsv"
    ]

    # Add additional targets based on upload config
    upload_config = config.get("upload", {})

    for target, params in upload_config.items():
        files_to_upload = params.get("files_to_upload", [])
        remote_file_names = params.get("remote_file_names", [])

        if len(files_to_upload) != len(remote_file_names):
            print(
                f"Skipping file upload for {target!r} because the number of",
                "files to upload does not match the number of remote file names."
            )
        elif len(remote_file_names) != len(set(remote_file_names)):
            print(f"Skipping file upload for {target!r} because there are duplicate remote file names.")
        elif "s3_dst" not in config:
            print(f"Skipping file upload for {target!r} because the destintion was not defined.")
        else:
            all_targets.extend(
                expand(
                    [f"data/upload/{target}/{{file_to_upload}}-to-{{remote_file_name}}.done"],
                    zip,
                    file_to_upload=files_to_upload,
                    remote_file_name=remote_file_names
                )
            )
    return all_targets

rule all:
    input: _get_all_targets



include: "workflow/snakemake_rules/fetch_sequences.smk"

include: "workflow/snakemake_rules/curate.smk"

if "s3_dst" in config:
    include: "workflow/snakemake_rules/upload.smk"

include: "workflow/snakemake_rules/sort.smk"
